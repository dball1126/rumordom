[33mcommit 33d87db85e68666e2f74192ba204bc313f12edbb[m
Author: Daniel Ball <g.thirteen333@gmail.com>
Date:   Mon Jul 9 23:25:41 2018 +0000

    Fixed business show page

[1mdiff --git a/Gemfile b/Gemfile[m
[1mindex e3fd0c9..2b88ebc 100644[m
[1m--- a/Gemfile[m
[1m+++ b/Gemfile[m
[36m@@ -13,10 +13,10 @@[m [mgem 'coffee-rails', '4.2.2'[m
 gem 'jquery-rails', '4.3.1'[m
 gem 'turbolinks',   '5.0.1'[m
 gem 'jbuilder',     '2.7.0'[m
[31m-gem 'geocoder'[m
[32m+[m[32mgem 'geocoder', '~> 1.4', '>= 1.4.9'[m
 gem 'carrierwave',             '1.2.2'[m
 gem 'mini_magick',             '4.7.0'[m
[31m-[m
[32m+[m[32mgem 'gmaps4rails'[m
 group :development, :test do[m
   gem 'sqlite3', '1.3.13'[m
   gem 'byebug',  '9.0.6', platform: :mri[m
[36m@@ -27,6 +27,9 @@[m [mgroup :development do[m
   gem 'listen',                '3.0.8'[m
   gem 'spring',                '2.0.2'[m
   gem 'spring-watcher-listen', '2.0.1'[m
[32m+[m[32m  gem 'better_errors'[m
[32m+[m[32m  gem 'rails_layout'[m
[32m+[m[32m  gem 'binding_of_caller'[m
 end[m
 [m
 group :test do[m
[36m@@ -42,4 +45,5 @@[m [mgroup :production do[m
 end[m
 [m
 # Windows does not include zoneinfo files, so bundle the tzinfo-data gem[m
[31m-gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby][m
\ No newline at end of file[m
[32m+[m[32mgem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby][m
[32m+[m[32mgem 'simple_form'[m
\ No newline at end of file[m
[1mdiff --git a/Gemfile.lock b/Gemfile.lock[m
[1mindex 8ba150f..4d0ed4d 100644[m
[1m--- a/Gemfile.lock[m
[1m+++ b/Gemfile.lock[m
[36m@@ -44,7 +44,13 @@[m [mGEM[m
     autoprefixer-rails (8.2.0)[m
       execjs[m
     bcrypt (3.1.11)[m
[32m+[m[32m    better_errors (2.4.0)[m
[32m+[m[32m      coderay (>= 1.0.0)[m
[32m+[m[32m      erubi (>= 1.0.0)[m
[32m+[m[32m      rack (>= 0.9.0)[m
     bindex (0.5.0)[m
[32m+[m[32m    binding_of_caller (0.8.0)[m
[32m+[m[32m      debug_inspector (>= 0.0.1)[m
     bootstrap-sass (3.3.7)[m
       autoprefixer-rails (>= 5.2.1)[m
       sass (>= 3.3.4)[m
[36m@@ -66,6 +72,7 @@[m [mGEM[m
     coffee-script-source (1.12.2)[m
     concurrent-ruby (1.0.5)[m
     crass (1.0.3)[m
[32m+[m[32m    debug_inspector (0.0.3)[m
     domain_name (0.5.20170404)[m
       unf (>= 0.0.5, < 1.0.0)[m
     erubi (1.7.1)[m
[36m@@ -228,9 +235,10 @@[m [mGEM[m
       fog-core[m
       nokogiri (>= 1.5.11, < 2.0.0)[m
     formatador (0.2.5)[m
[31m-    geocoder (1.4.7)[m
[32m+[m[32m    geocoder (1.4.9)[m
     globalid (0.4.1)[m
       activesupport (>= 4.2.0)[m
[32m+[m[32m    gmaps4rails (2.1.2)[m
     guard (2.13.0)[m
       formatador (>= 0.2.4)[m
       listen (>= 2.7, <= 4.0)[m
[36m@@ -318,6 +326,7 @@[m [mGEM[m
       nokogiri (>= 1.6)[m
     rails-html-sanitizer (1.0.3)[m
       loofah (~> 2.0)[m
[32m+[m[32m    rails_layout (1.0.42)[m
     railties (5.1.4)[m
       actionpack (= 5.1.4)[m
       activesupport (= 5.1.4)[m
[36m@@ -353,6 +362,9 @@[m [mGEM[m
       sprockets-rails (>= 2.0, < 4.0)[m
       tilt (>= 1.1, < 3)[m
     shellany (0.0.1)[m
[32m+[m[32m    simple_form (4.0.1)[m
[32m+[m[32m      actionpack (>= 5.0)[m
[32m+[m[32m      activemodel (>= 5.0)[m
     spring (2.0.2)[m
       activesupport (>= 4.2)[m
     spring-watcher-listen (2.0.1)[m
[36m@@ -396,6 +408,8 @@[m [mPLATFORMS[m
 [m
 DEPENDENCIES[m
   bcrypt (= 3.1.11)[m
[32m+[m[32m  better_errors[m
[32m+[m[32m  binding_of_caller[m
   bootstrap-sass (= 3.3.7)[m
   bootstrap-will_paginate (= 1.0.0)[m
   byebug (= 9.0.6)[m
[36m@@ -403,7 +417,8 @@[m [mDEPENDENCIES[m
   coffee-rails (= 4.2.2)[m
   faker (= 1.7.3)[m
   fog (= 1.42)[m
[31m-  geocoder[m
[32m+[m[32m  geocoder (~> 1.4, >= 1.4.9)[m
[32m+[m[32m  gmaps4rails[m
   guard (= 2.13.0)[m
   guard-minitest (= 2.4.4)[m
   jbuilder (= 2.7.0)[m
[36m@@ -415,7 +430,9 @@[m [mDEPENDENCIES[m
   puma (= 3.9.1)[m
   rails (= 5.1.4)[m
   rails-controller-testing (= 1.0.2)[m
[32m+[m[32m  rails_layout[m
   sass-rails (= 5.0.6)[m
[32m+[m[32m  simple_form[m
   spring (= 2.0.2)[m
   spring-watcher-listen (= 2.0.1)[m
   sqlite3 (= 1.3.13)[m
[36m@@ -426,4 +443,4 @@[m [mDEPENDENCIES[m
   will_paginate (= 3.1.6)[m
 [m
 BUNDLED WITH[m
[31m-   1.15.3[m
[32m+[m[32m   1.16.2[m
[1mdiff --git a/README.md b/README.md[m
[1mindex 6f71839..35f95c3 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -117,4 +117,8 @@[m [mneed to fix experience page.[m
 [m
 up to line 19 on businesses show on youtube video 535  5 10 2018[m
 [m
[31m-Trying to fix the search method for businesses[m
\ No newline at end of file[m
[32m+[m[32mTrying to fix the search method for businesses[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mPLAN:1. Look at Organization.  Comment out the valid geocode and before save geocode and import records with coordinates.   2. uncomment the geocode and import records that need to be geocoded but only after speaking to Google about pricing.[m
\ No newline at end of file[m
[1mdiff --git a/app/assets/images/alert.png b/app/assets/images/alert.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d3d0784[m
Binary files /dev/null and b/app/assets/images/alert.png differ
[1mdiff --git a/app/assets/images/good.png b/app/assets/images/good.png[m
[1mnew file mode 100644[m
[1mindex 0000000..e9d9492[m
Binary files /dev/null and b/app/assets/images/good.png differ
[1mdiff --git a/app/assets/javascripts/application.js b/app/assets/javascripts/application.js[m
[1mindex f610ab8..c4329d0 100644[m
[1m--- a/app/assets/javascripts/application.js[m
[1m+++ b/app/assets/javascripts/application.js[m
[36m@@ -14,4 +14,5 @@[m
 //= require bootstrap[m
 //= require rails-ujs[m
 //= require turbolinks[m
[31m-//= require_tree .[m
\ No newline at end of file[m
[32m+[m[32m//= require_tree .[m
[32m+[m[32m//= require gmaps/google[m
\ No newline at end of file[m
[1mdiff --git a/app/assets/javascripts/gmaps/base.coffee b/app/assets/javascripts/gmaps/base.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..9210e33[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/base.coffee[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#= require_self[m
[32m+[m[32m#= require_tree './base'[m
[32m+[m[32m#= require_tree './objects'[m
[32m+[m
[32m+[m[32m@Gmaps =[m
[32m+[m
[32m+[m[32m  build: (type, options = {})->[m
[32m+[m[32m    model = if _.isFunction(options.handler) then options.handler else Gmaps.Objects.Handler[m
[32m+[m[32m    new model(type, options)[m
[32m+[m
[32m+[m[32m  Builders: {}[m
[32m+[m[32m  Objects:  {}[m
[32m+[m
[32m+[m[32m  Google:[m
[32m+[m[32m    Objects:  {}[m
[32m+[m[32m    Builders: {}[m
[1mdiff --git a/app/assets/javascripts/gmaps/base/base.coffee b/app/assets/javascripts/gmaps/base/base.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..4257d7e[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/base/base.coffee[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mmoduleKeywords = ['extended', 'included'][m
[32m+[m
[32m+[m[32mclass @Gmaps.Base[m
[32m+[m
[32m+[m[32m  @extend: (obj) ->[m
[32m+[m[32m    for key, value of obj when key not in moduleKeywords[m
[32m+[m[32m      @[key] = value[m
[32m+[m
[32m+[m[32m    obj.extended?.apply(@)[m
[32m+[m[32m    this[m
[32m+[m
[32m+[m[32m  @include: (obj) ->[m
[32m+[m[32m    for key, value of obj when key not in moduleKeywords[m
[32m+[m[32m      # Assign properties to the prototype[m
[32m+[m[32m      @::[key] = value[m
[32m+[m[32m    obj.included?.apply(@)[m
[32m+[m[32m    this[m
[1mdiff --git a/app/assets/javascripts/gmaps/google.coffee b/app/assets/javascripts/gmaps/google.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..1bfe1da[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google.coffee[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m#= require './base'[m
[32m+[m[32m#= require './google/objects/common'[m
[32m+[m[32m#= require_tree './google'[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/bound.coffee b/app/assets/javascripts/gmaps/google/builders/bound.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..d12799c[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/bound.coffee[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Bound extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  constructor: (options)->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    @serviceObject = new(@primitives().latLngBounds)[m
[32m+[m[32m    @after_init()[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/circle.coffee b/app/assets/javascripts/gmaps/google/builders/circle.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..3b05ee2[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/circle.coffee[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Circle extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  # args:[m
[32m+[m[32m  #   lat[m
[32m+[m[32m  #   lng[m
[32m+[m[32m  #   radius[m
[32m+[m[32m  # provider options:[m
[32m+[m[32m  #   https://developers.google.com/maps/documentation/javascript/reference?hl=fr#CircleOptions[m
[32m+[m[32m  constructor: (@args, @provider_options = {})->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    @serviceObject = @create_circle()[m
[32m+[m[32m    @after_init()[m
[32m+[m
[32m+[m[32m  create_circle: ->[m
[32m+[m[32m    new(@primitives().circle)(@circle_options())[m
[32m+[m
[32m+[m[32m  circle_options: ->[m
[32m+[m[32m    base_options =[m
[32m+[m[32m      center:   new(@primitives().latLng)(@args.lat, @args.lng)[m
[32m+[m[32m      radius:   @args.radius[m
[32m+[m[32m    _.defaults base_options, @provider_options[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/clusterer.coffee b/app/assets/javascripts/gmaps/google/builders/clusterer.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..56009ea[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/clusterer.coffee[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Clusterer extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  constructor: (@args, @options)->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    @serviceObject = new(@primitives().clusterer)(@args.map, [], @options)[m
[32m+[m[32m    @after_init()[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/kml.coffee b/app/assets/javascripts/gmaps/google/builders/kml.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..669ebae[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/kml.coffee[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Kml extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  # args:[m
[32m+[m[32m  #   url[m
[32m+[m[32m  # provider options:[m
[32m+[m[32m  #   https://developers.google.com/maps/documentation/javascript/reference?hl=fr#KmlLayerOptions[m
[32m+[m[32m  constructor: (@args, @provider_options = {})->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    @serviceObject = @create_kml()[m
[32m+[m[32m    @after_init()[m
[32m+[m
[32m+[m[32m  create_kml: ->[m
[32m+[m[32m    new(@primitives().kml)(@args.url, @kml_options())[m
[32m+[m
[32m+[m[32m  kml_options: ->[m
[32m+[m[32m    base_options = {}[m
[32m+[m[32m    _.defaults base_options, @provider_options[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/map.coffee b/app/assets/javascripts/gmaps/google/builders/map.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..61d313f[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/map.coffee[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Map extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  # options:[m
[32m+[m[32m  #   internal:[m
[32m+[m[32m  #     id: dom id of your map container[m
[32m+[m[32m  #   provider: are any options from google: https://developers.google.com/maps/documentation/javascript/reference?hl=fr#MapOptions[m
[32m+[m[32m  # onMapLoad is the callback triggered once map is loaded[m
[32m+[m[32m  constructor: (options, onMapLoad)->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    provider_options  = _.extend @default_options(), options.provider[m
[32m+[m[32m    @internal_options = options.internal[m
[32m+[m[32m    @serviceObject    = new(@primitives().map)(document.getElementById(@internal_options.id), provider_options)[m
[32m+[m[32m    @on_map_load onMapLoad[m
[32m+[m[32m    @after_init()[m
[32m+[m
[32m+[m[32m  build: ->[m
[32m+[m[32m    new(@model_class())(@serviceObject, @primitives())[m
[32m+[m
[32m+[m[32m  on_map_load: (onMapLoad)->[m
[32m+[m[32m    @primitives().addListenerOnce @serviceObject, 'idle', onMapLoad[m
[32m+[m
[32m+[m[32m  default_options: ->[m
[32m+[m[32m    {[m
[32m+[m[32m      mapTypeId: @primitives().mapTypes('ROADMAP') # HYBRID, ROADMAP, SATELLITE, TERRAIN[m
[32m+[m[32m      center:    new(@primitives().latLng)(0, 0)[m
[32m+[m[32m      zoom:      8[m
[32m+[m[32m    }[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/marker.coffee b/app/assets/javascripts/gmaps/google/builders/marker.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..8daf783[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/marker.coffee[m
[36m@@ -0,0 +1,101 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Marker extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  @CURRENT_INFOWINDOW: undefined[m
[32m+[m[32m  @CACHE_STORE: {}[m
[32m+[m
[32m+[m[32m  # args:[m
[32m+[m[32m  #   lat[m
[32m+[m[32m  #   lng[m
[32m+[m[32m  #   infowindow[m
[32m+[m[32m  #   marker_title[m
[32m+[m[32m  #   picture[m
[32m+[m[32m  #     anchor: [x,y][m
[32m+[m[32m  #     url[m
[32m+[m[32m  #     width[m
[32m+[m[32m  #     height[m
[32m+[m[32m  #   shadow[m
[32m+[m[32m  #     anchor: [x,y][m
[32m+[m[32m  #     url[m
[32m+[m[32m  #     width[m
[32m+[m[32m  #     height[m
[32m+[m[32m  # provider options:[m
[32m+[m[32m  #   https://developers.google.com/maps/documentation/javascript/reference?hl=fr#MarkerOptions[m
[32m+[m[32m  # internal_options[m
[32m+[m[32m  #   singleInfowindow: true/false[m
[32m+[m[32m  #   maxRandomDistance: null / int in meters[m
[32m+[m[32m  constructor: (@args, @provider_options = {}, @internal_options = {})->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    @create_marker()[m
[32m+[m[32m    @create_infowindow_on_click()[m
[32m+[m[32m    @after_init()[m
[32m+[m
[32m+[m[32m  build: ->[m
[32m+[m[32m    @marker = new(@model_class())(@serviceObject)[m
[32m+[m
[32m+[m[32m  create_marker: ->[m
[32m+[m[32m    @serviceObject = new(@primitives().marker)(@marker_options())[m
[32m+[m
[32m+[m[32m  create_infowindow: ->[m
[32m+[m[32m    return null unless _.isString @args.infowindow[m
[32m+[m[32m    new(@primitives().infowindow)({content: @args.infowindow })[m
[32m+[m
[32m+[m[32m  marker_options: ->[m
[32m+[m[32m    coords = @_randomized_coordinates()[m
[32m+[m[32m    base_options =[m
[32m+[m[32m      title:    @args.marker_title[m
[32m+[m[32m      position: new(@primitives().latLng)(coords[0], coords[1])[m
[32m+[m[32m      icon:     @_get_picture('picture')[m
[32m+[m[32m      shadow:   @_get_picture('shadow')[m
[32m+[m[32m    _.extend @provider_options, base_options[m
[32m+[m
[32m+[m[32m  create_infowindow_on_click: ->[m
[32m+[m[32m    @addListener 'click', @infowindow_binding[m
[32m+[m
[32m+[m[32m  infowindow_binding: =>[m
[32m+[m[32m    @constructor.CURRENT_INFOWINDOW.close() if @_should_close_infowindow()[m
[32m+[m[32m    @marker.panTo()[m
[32m+[m[32m    @infowindow ?= @create_infowindow()[m
[32m+[m
[32m+[m[32m    return unless @infowindow?[m
[32m+[m
[32m+[m[32m    @infowindow.open( @getServiceObject().getMap(), @getServiceObject())[m
[32m+[m[32m    @marker.infowindow ?= @infowindow[m
[32m+[m[32m    @constructor.CURRENT_INFOWINDOW = @infowindow[m
[32m+[m
[32m+[m[32m  _get_picture: (picture_name)->[m
[32m+[m[32m    return null if !_.isObject(@args[picture_name]) || !_.isString(@args[picture_name].url)[m
[32m+[m[32m    @_create_or_retrieve_image @_picture_args(picture_name)[m
[32m+[m
[32m+[m[32m  _create_or_retrieve_image: (picture_args) ->[m
[32m+[m[32m    if @constructor.CACHE_STORE[picture_args.url] is undefined[m
[32m+[m[32m      @constructor.CACHE_STORE[picture_args.url] = new(@primitives().markerImage)(picture_args.url, picture_args.size, picture_args.origin, picture_args.anchor , picture_args.scaledSize)[m
[32m+[m
[32m+[m[32m    @constructor.CACHE_STORE[picture_args.url][m
[32m+[m
[32m+[m[32m  _picture_args: (picture_name)->[m
[32m+[m[32m    {[m
[32m+[m[32m      url:        @args[picture_name].url[m
[32m+[m[32m      anchor:     @_createImageAnchorPosition @args[picture_name].anchor[m
[32m+[m[32m      size:       new(@primitives().size)(@args[picture_name].width, @args[picture_name].height)[m
[32m+[m[32m      scaledSize: null[m
[32m+[m[32m      origin:     null[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  _createImageAnchorPosition : (anchorLocation) ->[m
[32m+[m[32m    return null unless _.isArray anchorLocation[m
[32m+[m[32m    new(@primitives().point)(anchorLocation[0], anchorLocation[1])[m
[32m+[m
[32m+[m[32m  _should_close_infowindow: ->[m
[32m+[m[32m    @internal_options.singleInfowindow and @constructor.CURRENT_INFOWINDOW?[m
[32m+[m
[32m+[m[32m  _randomized_coordinates: ->[m
[32m+[m[32m    return [@args.lat, @args.lng] unless _.isNumber(@internal_options.maxRandomDistance)[m
[32m+[m
[32m+[m[32m    #gives a value between -1 and 1[m
[32m+[m[32m    random = -> (Math.random() * 2 - 1)[m
[32m+[m[32m    dx  = @internal_options.maxRandomDistance * random()[m
[32m+[m[32m    dy  = @internal_options.maxRandomDistance * random()[m
[32m+[m[32m    Lat = parseFloat(@args.lat) + (180/Math.PI)*(dy/6378137)[m
[32m+[m[32m    Lng = parseFloat(@args.lng) + ( 90/Math.PI)*(dx/6378137)/Math.cos(@args.lat)[m
[32m+[m[32m    return [Lat, Lng][m
[32m+[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/polygon.coffee b/app/assets/javascripts/gmaps/google/builders/polygon.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..315c158[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/polygon.coffee[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Polygon extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  # args:[m
[32m+[m[32m  #   [[m
[32m+[m[32m  #     { lat, lng}[m
[32m+[m[32m  #   ][m
[32m+[m[32m  # provider options:[m
[32m+[m[32m  #   https://developers.google.com/maps/documentation/javascript/reference?hl=fr#PolygonOptions[m
[32m+[m[32m  constructor: (@args, @provider_options = {})->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    @serviceObject = @create_polygon()[m
[32m+[m[32m    @after_init()[m
[32m+[m
[32m+[m[32m  create_polygon: ->[m
[32m+[m[32m    new(@primitives().polygon)(@polygon_options())[m
[32m+[m
[32m+[m[32m  polygon_options: ->[m
[32m+[m[32m    base_options =[m
[32m+[m[32m      path:  @_build_path()[m
[32m+[m[32m    _.defaults base_options, @provider_options[m
[32m+[m
[32m+[m[32m  _build_path: ->[m
[32m+[m[32m    _.map @args, (arg)=>[m
[32m+[m[32m      new(@primitives().latLng)(arg.lat, arg.lng)[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/builders/polyline.coffee b/app/assets/javascripts/gmaps/google/builders/polyline.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..9042851[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/builders/polyline.coffee[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mclass @Gmaps.Google.Builders.Polyline extends Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  # args:[m
[32m+[m[32m  #   [[m
[32m+[m[32m  #     { lat, lng}[m
[32m+[m[32m  #   ][m
[32m+[m[32m  # provider options:[m
[32m+[m[32m  #   https://developers.google.com/maps/documentation/javascript/reference?hl=fr#PolylineOptions[m
[32m+[m[32m  constructor: (@args, @provider_options = {})->[m
[32m+[m[32m    @before_init()[m
[32m+[m[32m    @serviceObject = @create_polyline()[m
[32m+[m[32m    @after_init()[m
[32m+[m
[32m+[m[32m  create_polyline: ->[m
[32m+[m[32m    new(@primitives().polyline)(@polyline_options())[m
[32m+[m
[32m+[m[32m  polyline_options: ->[m
[32m+[m[32m    base_options =[m
[32m+[m[32m      path:  @_build_path()[m
[32m+[m[32m    _.defaults base_options, @provider_options[m
[32m+[m
[32m+[m[32m  _build_path: ->[m
[32m+[m[32m    _.map @args, (arg)=>[m
[32m+[m[32m      new(@primitives().latLng)(arg.lat, arg.lng)[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/bound.coffee b/app/assets/javascripts/gmaps/google/objects/bound.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..3eed44d[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/bound.coffee[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Bound extends Gmaps.Base[m
[32m+[m
[32m+[m[32m  @include Gmaps.Google.Objects.Common[m
[32m+[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  extendWith: (array_or_object)->[m
[32m+[m[32m    collection = if _.isArray(array_or_object) then array_or_object else [ array_or_object ][m
[32m+[m[32m    _.each collection, (object)=>[m
[32m+[m[32m      object.updateBounds(@)[m
[32m+[m
[32m+[m[32m  # position can be:[m
[32m+[m[32m  # - [ lat, lng][m
[32m+[m[32m  # - { lat: , lng: }[m
[32m+[m[32m  # - a google.maps.LatLng[m
[32m+[m[32m  extend: (value)->[m
[32m+[m[32m    @getServiceObject().extend @primitives().latLngFromPosition(value)[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/circle.coffee b/app/assets/javascripts/gmaps/google/objects/circle.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..3a8fbd8[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/circle.coffee[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Circle extends Gmaps.Base[m
[32m+[m
[32m+[m[32m  @include Gmaps.Google.Objects.Common[m
[32m+[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  updateBounds: (bounds)->[m
[32m+[m[32m    bounds.extend(@getServiceObject().getBounds().getNorthEast())[m
[32m+[m[32m    bounds.extend(@getServiceObject().getBounds().getSouthWest())[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/clusterer.coffee b/app/assets/javascripts/gmaps/google/objects/clusterer.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..e5beed0[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/clusterer.coffee[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Clusterer[m
[32m+[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  addMarkers: (markers)->[m
[32m+[m[32m    _.each markers, (marker)=>[m
[32m+[m[32m      @addMarker(marker)[m
[32m+[m
[32m+[m[32m  addMarker: (marker)->[m
[32m+[m[32m    @getServiceObject().addMarker(marker.getServiceObject())[m
[32m+[m
[32m+[m[32m  clear: ->[m
[32m+[m[32m    @getServiceObject().clearMarkers()[m
[32m+[m
[32m+[m[32m  removeMarker: (marker)->[m
[32m+[m[32m    @getServiceObject().removeMarker marker.getServiceObject()[m
[32m+[m
[32m+[m[32m  getServiceObject: ->[m
[32m+[m[32m    @serviceObject[m
[32m+[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/common.coffee b/app/assets/javascripts/gmaps/google/objects/common.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..c78e24b[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/common.coffee[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m@Gmaps.Google.Objects.Common =[m
[32m+[m
[32m+[m[32m  getServiceObject: ->[m
[32m+[m[32m    @serviceObject[m
[32m+[m
[32m+[m[32m  setMap: (map)->[m
[32m+[m[32m    @getServiceObject().setMap map[m
[32m+[m
[32m+[m[32m  clear: ->[m
[32m+[m[32m    @getServiceObject().setMap(null)[m
[32m+[m
[32m+[m[32m  show: ->[m
[32m+[m[32m    @getServiceObject().setVisible(true)[m
[32m+[m
[32m+[m[32m  hide: ->[m
[32m+[m[32m    @getServiceObject().setVisible(false)[m
[32m+[m
[32m+[m[32m  isVisible: ->[m
[32m+[m[32m    @getServiceObject().getVisible()[m
[32m+[m
[32m+[m[32m  primitives: ->[m
[32m+[m[32m    @constructor.PRIMITIVES[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/kml.coffee b/app/assets/javascripts/gmaps/google/objects/kml.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..466af59[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/kml.coffee[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Kml extends Gmaps.Base[m
[32m+[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  updateBounds: (bounds)->[m
[32m+[m[32m    #even not provided by google...[m
[32m+[m
[32m+[m[32m  setMap: (map)->[m
[32m+[m[32m    @getServiceObject().setMap map[m
[32m+[m
[32m+[m[32m  getServiceObject: ->[m
[32m+[m[32m    @serviceObject[m
[32m+[m
[32m+[m[32m  primitives: ->[m
[32m+[m[32m    @constructor.PRIMITIVES[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/map.coffee b/app/assets/javascripts/gmaps/google/objects/map.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..7ac4fba[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/map.coffee[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Map extends Gmaps.Base[m
[32m+[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  getServiceObject: ->[m
[32m+[m[32m    @serviceObject[m
[32m+[m
[32m+[m[32m  # position can be:[m
[32m+[m[32m  # - [ lat, lng][m
[32m+[m[32m  # - { lat: , lng: }[m
[32m+[m[32m  # - a google.maps.LatLng[m
[32m+[m[32m  centerOn: (position)->[m
[32m+[m[32m    @getServiceObject().setCenter @primitives().latLngFromPosition(position)[m
[32m+[m
[32m+[m[32m  fitToBounds: (boundsObject)->[m
[32m+[m[32m    @getServiceObject().fitBounds(boundsObject) unless boundsObject.isEmpty()[m
[32m+[m
[32m+[m[32m  primitives: ->[m
[32m+[m[32m    @constructor.PRIMITIVES[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/marker.coffee b/app/assets/javascripts/gmaps/google/objects/marker.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..dc9b466[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/marker.coffee[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Marker extends Gmaps.Base[m
[32m+[m
[32m+[m[32m  @include Gmaps.Google.Objects.Common[m
[32m+[m
[32m+[m[32m  # @infowindow is set later, once marker is clicked[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  updateBounds: (bounds)->[m
[32m+[m[32m    bounds.extend(@getServiceObject().position)[m
[32m+[m
[32m+[m[32m  panTo: ->[m
[32m+[m[32m    @getServiceObject().getMap().panTo @getServiceObject().getPosition()[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/polygon.coffee b/app/assets/javascripts/gmaps/google/objects/polygon.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..e41caca[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/polygon.coffee[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Polygon extends Gmaps.Base[m
[32m+[m
[32m+[m[32m  @include Gmaps.Google.Objects.Common[m
[32m+[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  updateBounds: (bounds)->[m
[32m+[m[32m    bounds.extend ll for ll in @serviceObject.getPath().getArray()[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/objects/polyline.coffee b/app/assets/javascripts/gmaps/google/objects/polyline.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..40879d0[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/objects/polyline.coffee[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mclass @Gmaps.Google.Objects.Polyline extends Gmaps.Base[m
[32m+[m
[32m+[m[32m  @include Gmaps.Google.Objects.Common[m
[32m+[m
[32m+[m[32m  constructor: (@serviceObject)->[m
[32m+[m
[32m+[m[32m  updateBounds: (bounds)->[m
[32m+[m[32m    bounds.extend ll for ll in @serviceObject.getPath().getArray()[m
[1mdiff --git a/app/assets/javascripts/gmaps/google/primitives.coffee b/app/assets/javascripts/gmaps/google/primitives.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..dc33fe9[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/google/primitives.coffee[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32m@Gmaps.Google.Primitives = ->[m
[32m+[m[32m  factory = {[m
[32m+[m[32m    point:        google.maps.Point[m
[32m+[m[32m    size:         google.maps.Size[m
[32m+[m[32m    circle:       google.maps.Circle[m
[32m+[m[32m    latLng:       google.maps.LatLng[m
[32m+[m[32m    latLngBounds: google.maps.LatLngBounds[m
[32m+[m[32m    map:          google.maps.Map[m
[32m+[m[32m    mapTypez:     google.maps.MapTypeId[m
[32m+[m[32m    markerImage:  google.maps.MarkerImage[m
[32m+[m[32m    marker:       google.maps.Marker[m
[32m+[m[32m    infowindow:   google.maps.InfoWindow[m
[32m+[m[32m    listener:     google.maps.event.addListener[m
[32m+[m[32m    clusterer:    MarkerClusterer[m
[32m+[m[32m    listenerOnce: google.maps.event.addListenerOnce[m
[32m+[m[32m    polyline:     google.maps.Polyline[m
[32m+[m[32m    polygon:      google.maps.Polygon[m
[32m+[m[32m    kml:          google.maps.KmlLayer[m
[32m+[m
[32m+[m[32m    addListener: (object, event_name, fn)->[m
[32m+[m[32m      factory.listener object, event_name, fn[m
[32m+[m
[32m+[m[32m    addListenerOnce: (object, event_name, fn)->[m
[32m+[m[32m      factory.listenerOnce object, event_name, fn[m
[32m+[m
[32m+[m[32m    mapTypes: (type)->[m
[32m+[m[32m      factory.mapTypez[type][m
[32m+[m
[32m+[m[32m    # position can be:[m
[32m+[m[32m    # - [ lat, lng][m
[32m+[m[32m    # - { lat: , lng: }[m
[32m+[m[32m    # - a google.maps.LatLng[m
[32m+[m[32m    # - a gmaps4rails object[m
[32m+[m[32m    latLngFromPosition: (position)->[m
[32m+[m[32m      if _.isArray(position)[m
[32m+[m[32m        return new factory.latLng(position[0], position[1])[m
[32m+[m[32m      else[m
[32m+[m[32m        if _.isNumber(position.lat) and _.isNumber(position.lng)[m
[32m+[m[32m          return new factory.latLng(position.lat, position.lng)[m
[32m+[m[32m        else[m
[32m+[m[32m          if _.isFunction position.getServiceObject[m
[32m+[m[32m            position.getServiceObject().getPosition()[m
[32m+[m[32m          else[m
[32m+[m[32m            position[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  factory[m
[1mdiff --git a/app/assets/javascripts/gmaps/objects/base_builder.coffee b/app/assets/javascripts/gmaps/objects/base_builder.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..0ed156b[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/objects/base_builder.coffee[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mclass @Gmaps.Objects.BaseBuilder[m
[32m+[m
[32m+[m[32m  build: ->[m
[32m+[m[32m    new(@model_class())(@serviceObject)[m
[32m+[m
[32m+[m[32m  before_init: ->[m
[32m+[m
[32m+[m[32m  after_init: ->[m
[32m+[m
[32m+[m[32m  addListener: (action, fn)->[m
[32m+[m[32m    @primitives().addListener @getServiceObject(), action, fn[m
[32m+[m
[32m+[m[32m  getServiceObject: ->[m
[32m+[m[32m    @serviceObject[m
[32m+[m
[32m+[m[32m  primitives: ->[m
[32m+[m[32m    @constructor.PRIMITIVES[m
[32m+[m
[32m+[m[32m  model_class: ->[m
[32m+[m[32m    @constructor.OBJECT[m
[1mdiff --git a/app/assets/javascripts/gmaps/objects/builder.coffee b/app/assets/javascripts/gmaps/objects/builder.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..8fdd4bd[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/objects/builder.coffee[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m@Gmaps.Objects.Builders = (builderClass, objectClass, primitivesProvider)->[m
[32m+[m
[32m+[m[32m  return {[m
[32m+[m[32m    build: (args, provider_options, internal_options)->[m
[32m+[m[32m      objectClass.PRIMITIVES = primitivesProvider[m
[32m+[m[32m      builderClass.OBJECT     = objectClass[m
[32m+[m[32m      builderClass.PRIMITIVES = primitivesProvider[m
[32m+[m
[32m+[m[32m      builder = new builderClass(args, provider_options, internal_options)[m
[32m+[m[32m      builder.build()[m
[32m+[m[32m  }[m
[1mdiff --git a/app/assets/javascripts/gmaps/objects/handler.coffee b/app/assets/javascripts/gmaps/objects/handler.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..52dd1f1[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/objects/handler.coffee[m
[36m@@ -0,0 +1,148 @@[m
[32m+[m[32mclass @Gmaps.Objects.Handler[m
[32m+[m
[32m+[m[32m  # options:[m
[32m+[m[32m  #   markers:[m
[32m+[m[32m  #     maxRandomDistance: null / int in meters[m
[32m+[m[32m  #     singleInfowindow:  true/false[m
[32m+[m[32m  #     clusterer:         null or object with options if you want clusters[m
[32m+[m[32m  #   models:   object, custom models   if you have some[m
[32m+[m[32m  #   builders: object, custom builders if you have some[m
[32m+[m[32m  #[m
[32m+[m[32m  constructor: (@type, options = {})->[m
[32m+[m[32m    @setPrimitives options[m
[32m+[m[32m    @setOptions options[m
[32m+[m[32m    @_cacheAllBuilders()[m
[32m+[m[32m    @resetBounds()[m
[32m+[m
[32m+[m[32m  buildMap: (options, onMapLoad = ->)->[m
[32m+[m[32m    @map = @_builder('Map').build options, =>[m
[32m+[m[32m      @_createClusterer()[m
[32m+[m[32m      onMapLoad()[m
[32m+[m
[32m+[m[32m  # return array of marker objects[m
[32m+[m[32m  addMarkers: (markers_data, provider_options)->[m
[32m+[m[32m    _.map markers_data, (marker_data)=>[m
[32m+[m[32m      @addMarker marker_data, provider_options[m
[32m+[m
[32m+[m[32m  # return marker object[m
[32m+[m[32m  addMarker: (marker_data, provider_options)->[m
[32m+[m[32m    marker = @_builder('Marker').build(marker_data, provider_options, @marker_options)[m
[32m+[m[32m    marker.setMap(@getMap())[m
[32m+[m[32m    @clusterer.addMarker marker[m
[32m+[m[32m    marker[m
[32m+[m
[32m+[m[32m  # return array of circle objects[m
[32m+[m[32m  addCircles: (circles_data, provider_options)->[m
[32m+[m[32m    _.map circles_data, (circle_data)=>[m
[32m+[m[32m      @addCircle circle_data, provider_options[m
[32m+[m
[32m+[m[32m  # return circle object[m
[32m+[m[32m  addCircle: (circle_data, provider_options)->[m
[32m+[m[32m    @_addResource('circle', circle_data, provider_options)[m
[32m+[m
[32m+[m[32m  # return array of polyline objects[m
[32m+[m[32m  addPolylines: (polylines_data, provider_options)->[m
[32m+[m[32m    _.map polylines_data, (polyline_data)=>[m
[32m+[m[32m      @addPolyline polyline_data, provider_options[m
[32m+[m
[32m+[m[32m  # return polyline object[m
[32m+[m[32m  addPolyline: (polyline_data, provider_options)->[m
[32m+[m[32m    @_addResource('polyline', polyline_data, provider_options)[m
[32m+[m
[32m+[m[32m  # return array of polygon objects[m
[32m+[m[32m  addPolygons: (polygons_data, provider_options)->[m
[32m+[m[32m    _.map polygons_data, (polygon_data)=>[m
[32m+[m[32m      @addPolygon polygon_data, provider_options[m
[32m+[m
[32m+[m[32m  # return polygon object[m
[32m+[m[32m  addPolygon: (polygon_data, provider_options)->[m
[32m+[m[32m    @_addResource('polygon', polygon_data, provider_options)[m
[32m+[m
[32m+[m[32m  # return array of kml objects[m
[32m+[m[32m  addKmls: (kmls_data, provider_options)->[m
[32m+[m[32m    _.map kmls_data, (kml_data)=>[m
[32m+[m[32m      @addKml kml_data, provider_options[m
[32m+[m
[32m+[m[32m  # return kml object[m
[32m+[m[32m  addKml: (kml_data, provider_options)->[m
[32m+[m[32m    @_addResource('kml', kml_data, provider_options)[m
[32m+[m
[32m+[m[32m  # removes markers from map[m
[32m+[m[32m  removeMarkers: (gem_markers)->[m
[32m+[m[32m    _.map gem_markers, (gem_marker)=>[m
[32m+[m[32m      @removeMarker gem_marker[m
[32m+[m
[32m+[m[32m  # removes marker from map[m
[32m+[m[32m  removeMarker: (gem_marker)->[m
[32m+[m[32m    gem_marker.clear()[m
[32m+[m[32m    @clusterer.removeMarker(gem_marker)[m
[32m+[m
[32m+[m[32m  fitMapToBounds: ->[m
[32m+[m[32m    @map.fitToBounds @bounds.getServiceObject()[m
[32m+[m
[32m+[m[32m  getMap: ->[m
[32m+[m[32m    @map.getServiceObject()[m
[32m+[m
[32m+[m[32m  setOptions: (options)->[m
[32m+[m[32m    @marker_options = _.extend @_default_marker_options(), options.markers[m
[32m+[m[32m    @builders       = _.extend @_default_builders(),       options.builders[m
[32m+[m[32m    @models         = _.extend @_default_models(),         options.models[m
[32m+[m
[32m+[m[32m  resetBounds: ->[m
[32m+[m[32m    @bounds = @_builder('Bound').build()[m
[32m+[m
[32m+[m[32m  setPrimitives: (options)->[m
[32m+[m[32m    @primitives = if options.primitives is undefined[m
[32m+[m[32m                    @_rootModule().Primitives()[m
[32m+[m[32m                  else[m
[32m+[m[32m                    if _.isFunction(options.primitives) then options.primitives() else options.primitives[m
[32m+[m
[32m+[m[32m  currentInfowindow: ->[m
[32m+[m[32m    @builders.Marker.CURRENT_INFOWINDOW[m
[32m+[m
[32m+[m[32m  _addResource: (resource_name, resource_data, provider_options)->[m
[32m+[m[32m    resource = @_builder(resource_name).build(resource_data, provider_options)[m
[32m+[m[32m    resource.setMap(@getMap())[m
[32m+[m[32m    resource[m
[32m+[m
[32m+[m[32m  _cacheAllBuilders: ->[m
[32m+[m[32m    that = @[m
[32m+[m[32m    _.each ['Bound', 'Circle',  'Clusterer', 'Kml', 'Map', 'Marker', 'Polygon', 'Polyline'], (kind)-> that._builder(kind)[m
[32m+[m
[32m+[m[32m  _clusterize: ->[m
[32m+[m[32m    _.isObject @marker_options.clusterer[m
[32m+[m
[32m+[m[32m  _createClusterer: ->[m
[32m+[m[32m    @clusterer = @_builder('Clusterer').build({ map: @getMap() }, @marker_options.clusterer )[m
[32m+[m
[32m+[m[32m  _default_marker_options: ->[m
[32m+[m[32m    _.clone {[m
[32m+[m[32m      singleInfowindow:  true[m
[32m+[m[32m      maxRandomDistance: 0[m
[32m+[m[32m      clusterer:[m
[32m+[m[32m        maxZoom:  5[m
[32m+[m[32m        gridSize: 50[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  _builder: (name)->[m
[32m+[m[32m    name = @_capitalize(name)[m
[32m+[m[32m    @["__builder#{name}"] ?= Gmaps.Objects.Builders(@builders[name], @models[name], @primitives)[m
[32m+[m[32m    @["__builder#{name}"][m
[32m+[m
[32m+[m[32m  _default_models: ->[m
[32m+[m[32m    models = _.clone(@_rootModule().Objects)[m
[32m+[m[32m    if @_clusterize()[m
[32m+[m[32m      models[m
[32m+[m[32m    else[m
[32m+[m[32m      models.Clusterer = Gmaps.Objects.NullClusterer[m
[32m+[m[32m      models[m
[32m+[m
[32m+[m[32m  _capitalize: (string)->[m
[32m+[m[32m    string.charAt(0).toUpperCase() + string.slice(1)[m
[32m+[m
[32m+[m[32m  _default_builders: ->[m
[32m+[m[32m    _.clone @_rootModule().Builders[m
[32m+[m
[32m+[m[32m  _rootModule: ->[m
[32m+[m[32m    @__rootModule ?= Gmaps[@type][m
[32m+[m[32m    @__rootModule[m
[1mdiff --git a/app/assets/javascripts/gmaps/objects/null_clusterer.coffee b/app/assets/javascripts/gmaps/objects/null_clusterer.coffee[m
[1mnew file mode 100644[m
[1mindex 0000000..49a61a1[m
[1m--- /dev/null[m
[1m+++ b/app/assets/javascripts/gmaps/objects/null_clusterer.coffee[m
[36m@@ -0,0 +1,5 @@[m
[32m